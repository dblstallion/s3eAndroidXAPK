/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_ANDROIDXAPK_H
#define S3E_EXT_ANDROIDXAPK_H

#include "s3eTypes.h"

typedef enum s3eAndroidXAPKCallback
{
    /**
     * Called after s3eAndroidXAPKGetFiles is called to return the response.
     * systemData is a pointer to an s3eAndroidXAPKResponse instance
     */
	s3eAndroidXAPKCallback_ResponseReceived,

	// Marker for the last callback
	s3eAndroidXAPKCallback_MAX
} s3eAndroidXAPKCallback;

typedef enum s3eAndroidXAPKResult
{
    s3eAndroidXAPKResult_Success,       // Licensed and everything worked
    s3eAndroidXAPKResult_NotAllowed,    // Definitely not licensed
    s3eAndroidXAPKResult_Retry,         // Likely that internet is down
    s3eAndroidXAPKResult_InvalidPackageName,
    s3eAndroidXAPKResult_NonMatchingUID,
    s3eAndroidXAPKResult_NotMarketManaged,
    s3eAndroidXAPKResult_CheckInProgress,
    s3eAndroidXAPKResult_InvalidPublicKey,
    s3eAndroidXAPKResult_MissingPermission
} s3eAndroidXAPKResult;

typedef struct s3eAndroidXAPKFile
{
    const char* name;
    const char* url;
    int64 size;
} s3eAndroidXAPKFile;

typedef struct s3eAndroidXAPKResponse
{
    s3eAndroidXAPKResult result;
    const s3eAndroidXAPKFile* files;
    int32 fileCount;
} s3eAndroidXAPKResponse;
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the AndroidXAPK extension is available.
 */
s3eBool s3eAndroidXAPKAvailable();

s3eResult s3eAndroidXAPKRegister(s3eAndroidXAPKCallback callbackID, s3eCallback callbackFn, void* userData);

s3eResult s3eAndroidXAPKUnRegister(s3eAndroidXAPKCallback callbackID, s3eCallback callbackFn);

s3eResult s3eAndroidXAPKGetFiles(const char* base64PublicKey, const void* salt, int32 saltLength);

S3E_END_C_DECL

#endif /* !S3E_EXT_ANDROIDXAPK_H */
