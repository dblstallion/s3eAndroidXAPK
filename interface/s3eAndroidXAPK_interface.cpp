/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "s3eAndroidXAPK.h"


// For MIPs (and WP8) platform we do not have asm code for stack switching 
// implemented. So we make LoaderCallStart call manually to set GlobalLock
#if defined __mips || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP))
#define LOADER_CALL
#endif

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*s3eAndroidXAPKRegister_t)(s3eAndroidXAPKCallback callbackID, s3eCallback callbackFn, void* userData);
typedef  s3eResult(*s3eAndroidXAPKUnRegister_t)(s3eAndroidXAPKCallback callbackID, s3eCallback callbackFn);
typedef       void(*s3eAndroidXAPKGetFiles_t)(const char* base64PublicKey, const void* salt, int32 saltLength);

/**
 * struct that gets filled in by s3eAndroidXAPKRegister
 */
typedef struct s3eAndroidXAPKFuncs
{
    s3eAndroidXAPKRegister_t m_s3eAndroidXAPKRegister;
    s3eAndroidXAPKUnRegister_t m_s3eAndroidXAPKUnRegister;
    s3eAndroidXAPKGetFiles_t m_s3eAndroidXAPKGetFiles;
} s3eAndroidXAPKFuncs;

static s3eAndroidXAPKFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x218da085, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: s3eAndroidXAPK");
            
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x218da085, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool s3eAndroidXAPKAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult s3eAndroidXAPKRegister(s3eAndroidXAPKCallback callbackID, s3eCallback callbackFn, void* userData)
{
    IwTrace(ANDROIDXAPK_VERBOSE, ("calling s3eAndroidXAPK[0] func: s3eAndroidXAPKRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidXAPKRegister(callbackID, callbackFn, userData);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

s3eResult s3eAndroidXAPKUnRegister(s3eAndroidXAPKCallback callbackID, s3eCallback callbackFn)
{
    IwTrace(ANDROIDXAPK_VERBOSE, ("calling s3eAndroidXAPK[1] func: s3eAndroidXAPKUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    s3eResult ret = g_Ext.m_s3eAndroidXAPKUnRegister(callbackID, callbackFn);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return ret;
}

void s3eAndroidXAPKGetFiles(const char* base64PublicKey, const void* salt, int32 saltLength)
{
    IwTrace(ANDROIDXAPK_VERBOSE, ("calling s3eAndroidXAPK[2] func: s3eAndroidXAPKGetFiles"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL
    s3eDeviceLoaderCallStart(S3E_TRUE, NULL);
#endif

    g_Ext.m_s3eAndroidXAPKGetFiles(base64PublicKey, salt, saltLength);

#ifdef LOADER_CALL
    s3eDeviceLoaderCallDone(S3E_TRUE, NULL);
#endif

    return;
}
